// XML.bnf
{
  parserClass="com.example.XMLParser"
  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
 // extends="com.intellij.lang.parser.GeneratedParserUtilBase"

  psiClassPrefix="XML"
  psiImplClassSuffix="Impl"
  elementTypeHolderClass="com.example.XMLElementTypes"
  elementTypeClass="de.brand.lexertest.XMLElementType"
  tokenTypeClass="de.brand.lexertest.XMLTokenType"
  tokens = [
      XML_DECL_START = "<?xml"
      XML_DECL_END = "?>"
      //COMMENT_START = "<!--"
      //COMMENT_END = "-->"
      TAG_OPEN = "<"
      TAG_CLOSE = ">"
      TAG_OPEN_CLOSE = "</"
      TAG_SELF_CLOSE = "/>"
      EQUALS = "="
      DOUBLE_QUOTE = "\""
      ELEMENT_NAME = "regexp:/[:_a-zA-Z][_a-zA-Z0-9.-]*/"
      ATTRIBUTE_VALUE = "regexp:/[^\"]*/"
      ENCLOSED_TEXT_TOKEN = "regexp:/((\\.)|[^<&\"])+/"
    ]
}


root ::= xml_document

xml_document ::= declaration_opt? element

declaration_opt ::= XML_DECL_START attribute_list XML_DECL_END
                  | /* empty */

element ::= TAG_OPEN ELEMENT_NAME attribute_list? TAG_CLOSE element_content? TAG_OPEN_CLOSE ELEMENT_NAME TAG_CLOSE
          | TAG_OPEN ELEMENT_NAME attribute_list? TAG_SELF_CLOSE

element_content ::= element_list
                  | enclosed_text
                  | /* empty */

element_list ::= element
               | element element_list

attribute_list ::= attribute
                 | attribute attribute_list
                 | /* empty */

attribute ::= ELEMENT_NAME EQUALS DOUBLE_QUOTE ATTRIBUTE_VALUE DOUBLE_QUOTE

enclosed_text ::= ENCLOSED_TEXT_TOKEN
